--- a/net/minecraft/util/datafix/fixes/ChunkProtoTickListFix.java
+++ b/net/minecraft/util/datafix/fixes/ChunkProtoTickListFix.java
@@ -185,7 +185,7 @@
         int i6 = i3 >>> 8 & 15;
         String string = function.apply(supplier != null ? supplier.get().get(i4, i5, i6) : null);
         return dynamic.createMap(
-            ImmutableMap.builder()
+            ImmutableMap.<Dynamic<?>, Dynamic<?>>builder()
                 .put(dynamic.createString("i"), dynamic.createString(string))
                 .put(dynamic.createString("x"), dynamic.createInt(i * 16 + i4))
                 .put(dynamic.createString("y"), dynamic.createInt(i1 * 16 + i5))
@@ -214,19 +214,19 @@
 
         @Nullable
         public Dynamic<?> get(int i, int i1, int i2) {
-            int size = this.palette.size();
-            if (size < 1) {
+            int i3 = this.palette.size();
+            if (i3 < 1) {
                 return null;
-            } else if (size == 1) {
+            } else if (i3 == 1) {
                 return this.palette.get(0);
             } else {
                 int index = this.getIndex(i, i1, i2);
-                int i3 = index / this.valuesPerLong;
-                if (i3 >= 0 && i3 < this.data.length) {
-                    long l = this.data[i3];
-                    int i4 = (index - i3 * this.valuesPerLong) * this.bits;
-                    int i5 = (int)(l >> i4 & this.mask);
-                    return i5 >= 0 && i5 < size ? this.palette.get(i5) : null;
+                int i4 = index / this.valuesPerLong;
+                if (i4 >= 0 && i4 < this.data.length) {
+                    long l = this.data[i4];
+                    int i5 = (index - i4 * this.valuesPerLong) * this.bits;
+                    int i6 = (int)(l >> i5 & this.mask);
+                    return i6 >= 0 && i6 < i3 ? this.palette.get(i6) : null;
                 } else {
                     return null;
                 }
