--- a/net/minecraft/world/item/alchemy/PotionBrewing.java
+++ b/net/minecraft/world/item/alchemy/PotionBrewing.java
@@ -32,7 +32,7 @@
     protected static boolean isContainerIngredient(ItemStack stack) {
         int i = 0;
 
-        for(int size = CONTAINER_MIXES.size(); i < size; ++i) {
+        for(int i1 = CONTAINER_MIXES.size(); i < i1; ++i) {
             if (CONTAINER_MIXES.get(i).ingredient.test(stack)) {
                 return true;
             }
@@ -44,7 +44,7 @@
     protected static boolean isPotionIngredient(ItemStack stack) {
         int i = 0;
 
-        for(int size = POTION_MIXES.size(); i < size; ++i) {
+        for(int i1 = POTION_MIXES.size(); i < i1; ++i) {
             if (POTION_MIXES.get(i).ingredient.test(stack)) {
                 return true;
             }
@@ -56,7 +56,7 @@
     public static boolean isBrewablePotion(Potion potion) {
         int i = 0;
 
-        for(int size = POTION_MIXES.size(); i < size; ++i) {
+        for(int i1 = POTION_MIXES.size(); i < i1; ++i) {
             if (POTION_MIXES.get(i).to == potion) {
                 return true;
             }
@@ -77,7 +77,7 @@
         Item item = input.getItem();
         int i = 0;
 
-        for(int size = CONTAINER_MIXES.size(); i < size; ++i) {
+        for(int i1 = CONTAINER_MIXES.size(); i < i1; ++i) {
             PotionBrewing.Mix<Item> mix = CONTAINER_MIXES.get(i);
             if (mix.from == item && mix.ingredient.test(ingredient)) {
                 return true;
@@ -91,7 +91,7 @@
         Potion potion = PotionUtils.getPotion(input);
         int i = 0;
 
-        for(int size = POTION_MIXES.size(); i < size; ++i) {
+        for(int i1 = POTION_MIXES.size(); i < i1; ++i) {
             PotionBrewing.Mix<Potion> mix = POTION_MIXES.get(i);
             if (mix.from == potion && mix.ingredient.test(ingredient)) {
                 return true;
@@ -107,7 +107,7 @@
             Item item = input.getItem();
             int i = 0;
 
-            for(int size = CONTAINER_MIXES.size(); i < size; ++i) {
+            for(int i1 = CONTAINER_MIXES.size(); i < i1; ++i) {
                 PotionBrewing.Mix<Item> mix = CONTAINER_MIXES.get(i);
                 if (mix.from == item && mix.ingredient.test(ingredient)) {
                     return PotionUtils.setPotion(new ItemStack(mix.to), potion);
@@ -116,7 +116,7 @@
 
             i = 0;
 
-            for(int size = POTION_MIXES.size(); i < size; ++i) {
+            for(int i1 = POTION_MIXES.size(); i < i1; ++i) {
                 PotionBrewing.Mix<Potion> mix = POTION_MIXES.get(i);
                 if (mix.from == potion && mix.ingredient.test(ingredient)) {
                     return PotionUtils.setPotion(new ItemStack(item), mix.to);
