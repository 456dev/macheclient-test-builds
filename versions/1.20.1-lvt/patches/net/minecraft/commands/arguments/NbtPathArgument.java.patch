--- a/net/minecraft/commands/arguments/NbtPathArgument.java
+++ b/net/minecraft/commands/arguments/NbtPathArgument.java
@@ -193,25 +193,25 @@
                 return 0;
             } else {
                 CollectionTag<?> collectionTag = (CollectionTag)current;
-                int size = collectionTag.size();
-                if (size == 0) {
+                int i = collectionTag.size();
+                if (i == 0) {
                     collectionTag.addTag(0, source.get());
                     return 1;
                 } else {
                     Tag tag = source.get();
-                    int i = size - (int)collectionTag.stream().filter(tag::equals).count();
-                    if (i == 0) {
+                    int i1 = i - (int)collectionTag.stream().filter(tag::equals).count();
+                    if (i1 == 0) {
                         return 0;
                     } else {
                         collectionTag.clear();
                         if (!collectionTag.addTag(0, tag)) {
                             return 0;
                         } else {
-                            for(int i1 = 1; i1 < size; ++i1) {
-                                collectionTag.addTag(i1, source.get());
+                            for(int i2 = 1; i2 < i; ++i2) {
+                                collectionTag.addTag(i2, source.get());
                             }
 
-                            return i;
+                            return i1;
                         }
                     }
                 }
@@ -221,10 +221,10 @@
         @Override
         public int removeTag(Tag current) {
             if (current instanceof CollectionTag collectionTag) {
-                int size = collectionTag.size();
-                if (size > 0) {
+                int i = collectionTag.size();
+                if (i > 0) {
                     collectionTag.clear();
-                    return size;
+                    return i;
                 }
             }
 
@@ -303,10 +303,10 @@
         @Override
         public void getTag(Tag current, List<Tag> results) {
             if (current instanceof CollectionTag collectionTag) {
-                int size = collectionTag.size();
-                int i = this.index < 0 ? size + this.index : this.index;
-                if (0 <= i && i < size) {
-                    results.add((Tag)collectionTag.get(i));
+                int i = collectionTag.size();
+                int i1 = this.index < 0 ? i + this.index : this.index;
+                if (0 <= i1 && i1 < i) {
+                    results.add((Tag)collectionTag.get(i1));
                 }
             }
         }
@@ -324,12 +324,12 @@
         @Override
         public int setTag(Tag current, Supplier<Tag> source) {
             if (current instanceof CollectionTag collectionTag) {
-                int size = collectionTag.size();
-                int i = this.index < 0 ? size + this.index : this.index;
-                if (0 <= i && i < size) {
-                    Tag tag = (Tag)collectionTag.get(i);
+                int i = collectionTag.size();
+                int i1 = this.index < 0 ? i + this.index : this.index;
+                if (0 <= i1 && i1 < i) {
+                    Tag tag = (Tag)collectionTag.get(i1);
                     Tag tag1 = source.get();
-                    if (!tag1.equals(tag) && collectionTag.setTag(i, tag1)) {
+                    if (!tag1.equals(tag) && collectionTag.setTag(i1, tag1)) {
                         return 1;
                     }
                 }
@@ -341,10 +341,10 @@
         @Override
         public int removeTag(Tag current) {
             if (current instanceof CollectionTag collectionTag) {
-                int size = collectionTag.size();
-                int i = this.index < 0 ? size + this.index : this.index;
-                if (0 <= i && i < size) {
-                    collectionTag.remove(i);
+                int i = collectionTag.size();
+                int i1 = this.index < 0 ? i + this.index : this.index;
+                if (0 <= i1 && i1 < i) {
+                    collectionTag.remove(i1);
                     return 1;
                 }
             }
@@ -394,16 +394,16 @@
         public int setTag(Tag current, Supplier<Tag> source) {
             int i = 0;
             if (current instanceof ListTag listTag) {
-                int size = listTag.size();
-                if (size == 0) {
+                int i1 = listTag.size();
+                if (i1 == 0) {
                     listTag.add(source.get());
                     ++i;
                 } else {
-                    for(int i1 = 0; i1 < size; ++i1) {
-                        Tag tag = listTag.get(i1);
+                    for(int i2 = 0; i2 < i1; ++i2) {
+                        Tag tag = listTag.get(i2);
                         if (this.predicate.test(tag)) {
                             Tag tag1 = source.get();
-                            if (!tag1.equals(tag) && listTag.setTag(i1, tag1)) {
+                            if (!tag1.equals(tag) && listTag.setTag(i2, tag1)) {
                                 ++i;
                             }
                         }
