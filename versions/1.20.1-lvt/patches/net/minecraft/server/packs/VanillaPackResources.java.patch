--- a/net/minecraft/server/packs/VanillaPackResources.java
+++ b/net/minecraft/server/packs/VanillaPackResources.java
@@ -65,17 +65,17 @@
     public void listResources(PackType type, String namespace, String prefix, PackResources.ResourceOutput consumer) {
         FileUtil.decomposePath(prefix).get().ifLeft(segments -> {
             List<Path> list = this.pathsForType.get(type);
-            int size = list.size();
-            if (size == 1) {
+            int i = list.size();
+            if (i == 1) {
                 getResources(consumer, namespace, list.get(0), segments);
-            } else if (size > 1) {
+            } else if (i > 1) {
                 Map<ResourceLocation, IoSupplier<InputStream>> map = new HashMap<>();
 
-                for(int i = 0; i < size - 1; ++i) {
-                    getResources(map::putIfAbsent, namespace, list.get(i), segments);
+                for(int i1 = 0; i1 < i - 1; ++i1) {
+                    getResources(map::putIfAbsent, namespace, list.get(i1), segments);
                 }
 
-                Path path = list.get(size - 1);
+                Path path = list.get(i - 1);
                 if (map.isEmpty()) {
                     getResources(consumer, namespace, path, segments);
                 } else {
